<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scnu.dao.TableInfoMapper">
	<!-- 查找数据库表名 -->
	<select id="showTables" parameterType="string" resultType="string">
		SELECT table_name FROM information_schema.`TABLES` WHERE table_schema=#{databaseName}
	</select>
	
	<!-- 删除表 -->
	<update id="dropTable" parameterType="map">
		<!-- drop table ${database,jdbcType=VARCHAR}.${table,jdbcType=VARCHAR} -->
		drop table if exists ${database}.${table}
	</update>
	
	<!-- 清空表 -->
	<update id="truncateTable" parameterType="map">
		truncate table ${database}.${table}
	</update>
	
	<!-- 创建表 
		int createTable(@Param("database")String database, 
					@Param("table")String table,
					@Param("fields")List<Fields> fields, //字段
					@Param("indexes")List<Indexes> indexes, //索引
					@Param("foreignkeys")List<ForeignKey> foreignKeys);//外键-->
	<update id="createTable">
	  	create table ${database}.${table} (
		<foreach collection="fields" separator="," item="item" >
			${item.name} ${item.type}(${item.length})
			<if test="item.notNull == 1">
				NOT NULL
			</if>
			<if test="item.primary == 1">
				PRIMARY KEY
			</if>
		</foreach>
<!--  		<if test="indexes != null and indexes.size()>0" close=",">
			<foreach collection="indexes" separator="," item="item2">
				${item2.type} INDEX ${item2.name}(${item2.field}) USING ${item2.method}
			</foreach>
		</if> -->
 		<if test="foreignkeys != null and foreignkeys.size()!= 0">
 			,
			<foreach collection="foreignkeys" separator="," item="item3">
				CONSTRAINT ${item3.name} FOREIGN KEY(${item3.field}) REFERENCES ${item3.withDatabase}.${item3.withTable}(${item3.withField}) ON DELETE ${item3.delete} ON UPDATE ${item3.update}
			</foreach>
		</if>
		) 

	</update>
	
	<!-- 查询表的所有字段名 -->
	<select id="showColumns" resultType="String">
		SHOW COLUMNS FROM ${database}.${table}
	</select>
	
	<!-- 插入字段 -->
	<update id="insertField">
		ALTER TABLE ${database}.${table} ADD(
			${field.name} ${field.type}(${field.length})
			<if test="field.notNull == 1">
				NOT NULL
			</if>
			<if test="field.primary == 1">
				PRIMARY KEY
			</if>
		)
	</update>
	
	<!-- 删除字段 -->
	<update id="dropField">
		ALTER TABLE ${database}.${table} DROP ${field}
	</update>
	
	<!-- 修改字段 -->
	<update id="changeField">
		ALTER TABLE ${database}.${table} CHANGE ${fieldName} ${field.name} ${field.type}(${field.length})
		<if test="field.notNull == 1">
			NOT NULL
		</if>
		<if test="field.primary == 1">
			PRIMARY KEY
		</if>
	</update>
	
	<!-- 查询表结构 -->
	<select id="showTableMsg" resultType="java.util.HashMap">
		SHOW COLUMNS FROM ${database}.${table}
	</select>
	
	<!-- 重命名表 -->
	<update id="renameTable">
		ALTER TABLE ${database}.${table} RENAME TO ${database}.${rename}
	</update>
	
	<!-- 查询表外键 -->
	<!-- 
		SELECT C.TABLE_SCHEMA            拥有者,
           C.REFERENCED_TABLE_NAME  父表名称 ,
           C.REFERENCED_COLUMN_NAME 父表字段 ,
           C.TABLE_NAME             子表名称,
           C.COLUMN_NAME            子表字段,
           C.CONSTRAINT_NAME        约束名,
           T.TABLE_COMMENT          表注释,
           R.UPDATE_RULE            约束更新规则,
           R.DELETE_RULE            约束删除规则
      FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE C
      JOIN INFORMATION_SCHEMA. TABLES T
        ON T.TABLE_NAME = C.TABLE_NAME
      JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS R
        ON R.TABLE_NAME = C.TABLE_NAME
       AND R.CONSTRAINT_NAME = C.CONSTRAINT_NAME
       AND R.REFERENCED_TABLE_NAME = C.REFERENCED_TABLE_NAME
      WHERE C.REFERENCED_TABLE_NAME IS NOT NULL 
			AND C.TABLE_SCHEMA = "test"
			AND C.TABLE_NAME = "table1";
	 -->
	 <select id="allfk" resultType="com.zichang.bean.ForeignKey">
		SELECT 
   		  C.CONSTRAINT_NAME        'name',
		  C.COLUMN_NAME           'field',
		  C.REFERENCED_TABLE_SCHEMA 'withDatabase',
          C.REFERENCED_TABLE_NAME  'withTable' ,
          C.REFERENCED_COLUMN_NAME 'withField' ,
          R.UPDATE_RULE            'update',
          R.DELETE_RULE            'delete'
      FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE C
      JOIN INFORMATION_SCHEMA. TABLES T
        ON T.TABLE_NAME = C.TABLE_NAME
      JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS R
        ON R.TABLE_NAME = C.TABLE_NAME
       AND R.CONSTRAINT_NAME = C.CONSTRAINT_NAME
       AND R.REFERENCED_TABLE_NAME = C.REFERENCED_TABLE_NAME
      WHERE C.REFERENCED_TABLE_NAME IS NOT NULL 
		AND C.TABLE_SCHEMA = #{database}
		AND C.TABLE_NAME = #{table}
	 </select>
	 
	 <!-- 删除外键 -->
	 <delete id="deletefk">
	 	ALTER TABLE ${database}.${table} drop FOREIGN KEY ${fname}
	 </delete>
	 
	 <!-- 添加外键 -->
	 <update id="insertfk">
	   ALTER TABLE ${database}.${table} ADD CONSTRAINT ${fk.name} FOREIGN KEY (${fk.field}) 
  	   REFERENCES ${fk.withDatabase}.${fk.withTable}(${fk.withField}) 
       ON DELETE ${fk.delete}
       ON UPDATE ${fk.update}
	 </update>
</mapper>