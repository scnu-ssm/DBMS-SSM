<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.2.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 自动生成数据表 -->
	<bean id="tables" class="com.chenrong.util.GenerateTable"></bean>
	<!-- **********		数据源配置		********** -->
	<!-- 1. 配置读取jdbc.properties文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<!-- 2. 配置Druid连接池 -->
	<!-- 配置的信息来自 com.chenrong.util.GenerateTable 类 -->
	<bean name="DataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" >
		<property name="driverClassName" value="#{tables.DRIVER}" ></property>
		<property name="url" value="#{tables.JDBCURL}" ></property>
 	<!--<property name="username" value="${jdbc.username}" ></property>
		<property name="password" value="${jdbc.password}" ></property> -->
	</bean>
	
	<!-- **********		业务注册		********** -->
	<!-- Service的注册 业务逻辑注册 -->
	<!-- 配置扫描器 -->
	<context:component-scan base-package="com.*.service" />
 	<context:component-scan base-package="com.scnu.util" />
	
	<!-- **********		整合Mybatis		********** -->
	<!-- 1. 注册SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定mybatis主配置文件的位置 -->
		<property name="configLocation" value="classpath:mybatis.xml"/>
		<!-- 连接池注入 -->
		<property name="dataSource" ref="DataSource"/>
		<!-- 指定mapper文件的位置 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>
	<!-- 2. 配置扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<!-- 扫描所有的DAO接口 加入到IOC容器中 -->
		<property name="basePackage" value="com.*.dao" />
	</bean>
	
	<!-- **********		批量执行的SqlSession		********** -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
		<constructor-arg name="executorType" value="BATCH" />
	</bean>
	
	<!-- **********		事务配置		********** -->
	<!-- 1. 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 控制住数据源 -->
		<property name="dataSource" ref="DataSource"/>
	</bean>
	
	<!-- 2. 注册事务通知 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 所有方法都是事务方法 -->
			<tx:method name="*" isolation="DEFAULT" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	<!-- 3. aop配置 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.*.service..*(..))" id="myPointCut"/>
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="myPointCut"/>
	</aop:config>
	
</beans>